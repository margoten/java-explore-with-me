DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS categories;
DROP TABLE IF EXISTS events;
DROP TABLE IF EXISTS compilations;
DROP TABLE IF EXISTS events_compilations;
DROP TABLE IF EXISTS requests;

CREATE TABLE IF NOT EXISTS users
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(128) NOT NULL,
    email VARCHAR(128) NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (id),
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS categories
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(128) NOT NULL,
    CONSTRAINT pk_category PRIMARY KEY (id),
    CONSTRAINT UQ_CATEGORY_NAME UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS compilations
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    pinned BOOLEAN NOT NULL,
    title VARCHAR(128) NOT NULL,
    CONSTRAINT pk_compilation PRIMARY KEY (id),
    CONSTRAINT UQ_COMPILATION_TITLE UNIQUE (title)
    );

CREATE TABLE IF NOT EXISTS events
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    annotation VARCHAR(2000) NOT NULL,
    title VARCHAR(120) NOT NULL,
    description VARCHAR(7000) NOT NULL,
    category_id INTEGER REFERENCES category (id) ON DELETE CASCADE,
    eventDate TIMESTAMP NOT NULL,
    created TIMESTAMP NOT NULL,
    published TIMESTAMP,
    lat FLOAT NOT NULL,
    lon FLOAT NOT NULL,
    pain BOOLEAN NOT NULL DEFAULT FALSE,
    participantLimit INTEGER NOT NULL DEFAULT 0
    requestModeration BOOLEAN NOT NULL DEFAULT TRUE,
    state VARCHAR(30) NOT NULL,
    CONSTRAINT pk_event PRIMARY KEY (id),
    );

CREATE TABLE IF NOT EXISTS events_compilations
(
   event_id INTEGER REFERENCES events (id) ON DELETE CASCADE,
   compilation_id INTEGER REFERENCES compilations (id) ON DELETE CASCADE
   CONSTRAINT fk_event FOREIGN KEY (event_id)
   CONSTRAINT fk_compilations FOREIGN KEY (compilation_id)

    );

CREATE TABLE IF NOT EXISTS requests
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    event_id INTEGER REFERENCES events (id) ON DELETE CASCADE,
    user_id INTEGER REFERENCES users (id) ON DELETE CASCADE
    created TIMESTAMP NOT NULL,
    status VARCHAR(30) NOT NULL DEFAULT 'PENDING',
    CONSTRAINT pk_request PRIMARY KEY (id)
    );